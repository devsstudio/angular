{"hash":"08668670c138add37a5c15215600fd22e8430338","fesm2020":{"code":"import * as i0 from '@angular/core';\nimport { Pipe, NgModule } from '@angular/core';\nimport { DatePipe as DatePipe$1 } from '@angular/common';\n\nclass CurrencyPipe {\n    transform(value, args) {\n        return 'S/' + Number(value).toFixed(2);\n    }\n}\nCurrencyPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: CurrencyPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });\nCurrencyPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"14.0.0\", version: \"14.3.0\", ngImport: i0, type: CurrencyPipe, name: \"currencyPipe\" });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: CurrencyPipe, decorators: [{\n            type: Pipe,\n            args: [{\n                    name: 'currencyPipe',\n                }]\n        }] });\n\nclass DatePipe extends DatePipe$1 {\n    transform(value, args) {\n        return super.transform(value, 'dd/MM/YYYY');\n    }\n}\nDatePipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: DatePipe, deps: null, target: i0.ɵɵFactoryTarget.Pipe });\nDatePipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"14.0.0\", version: \"14.3.0\", ngImport: i0, type: DatePipe, name: \"datePipe\" });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: DatePipe, decorators: [{\n            type: Pipe,\n            args: [{\n                    name: 'datePipe',\n                }]\n        }] });\n\nclass DatetimePipe extends DatePipe$1 {\n    transform(value, args) {\n        return super.transform(value, 'dd/MM/YYYY h:mm:ss a');\n    }\n}\nDatetimePipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: DatetimePipe, deps: null, target: i0.ɵɵFactoryTarget.Pipe });\nDatetimePipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"14.0.0\", version: \"14.3.0\", ngImport: i0, type: DatetimePipe, name: \"datetimePipe\" });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: DatetimePipe, decorators: [{\n            type: Pipe,\n            args: [{\n                    name: 'datetimePipe',\n                }]\n        }] });\n\nclass DayPipe {\n    transform(value, args) {\n        return value + ' días';\n    }\n}\nDayPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: DayPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });\nDayPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"14.0.0\", version: \"14.3.0\", ngImport: i0, type: DayPipe, name: \"dayPipe\" });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: DayPipe, decorators: [{\n            type: Pipe,\n            args: [{\n                    name: 'dayPipe',\n                }]\n        }] });\n\nclass HourMinutePipe extends DatePipe$1 {\n    transform(value, args) {\n        return super.transform(value, 'h:mm a');\n    }\n}\nHourMinutePipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: HourMinutePipe, deps: null, target: i0.ɵɵFactoryTarget.Pipe });\nHourMinutePipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"14.0.0\", version: \"14.3.0\", ngImport: i0, type: HourMinutePipe, name: \"hourMinutePipe\" });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: HourMinutePipe, decorators: [{\n            type: Pipe,\n            args: [{\n                    name: 'hourMinutePipe',\n                }]\n        }] });\n\nclass IntPipe {\n    transform(value, args) {\n        return Number(value).toFixed(0);\n    }\n}\nIntPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: IntPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });\nIntPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"14.0.0\", version: \"14.3.0\", ngImport: i0, type: IntPipe, name: \"intPipe\" });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: IntPipe, decorators: [{\n            type: Pipe,\n            args: [{\n                    name: 'intPipe',\n                }]\n        }] });\n\nclass PercentPipe {\n    transform(value, args) {\n        return (value * 100).toFixed(0) + '%';\n    }\n}\nPercentPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: PercentPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });\nPercentPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"14.0.0\", version: \"14.3.0\", ngImport: i0, type: PercentPipe, name: \"percentPipe\" });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: PercentPipe, decorators: [{\n            type: Pipe,\n            args: [{\n                    name: 'percentPipe',\n                }]\n        }] });\n\nclass TruncatePipe {\n    transform(value, limit) {\n        if (limit <= value.length) {\n            return value.substring(0, limit) + \"...\";\n        }\n        else {\n            return value;\n        }\n    }\n}\nTruncatePipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: TruncatePipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });\nTruncatePipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"14.0.0\", version: \"14.3.0\", ngImport: i0, type: TruncatePipe, name: \"truncatePipe\" });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: TruncatePipe, decorators: [{\n            type: Pipe,\n            args: [{\n                    name: 'truncatePipe',\n                }]\n        }] });\n\nclass PipesModule {\n}\nPipesModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: PipesModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nPipesModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.3.0\", ngImport: i0, type: PipesModule, declarations: [CurrencyPipe,\n        DatePipe,\n        DatetimePipe,\n        DayPipe,\n        HourMinutePipe,\n        IntPipe,\n        PercentPipe,\n        TruncatePipe], exports: [CurrencyPipe,\n        DatePipe,\n        DatetimePipe,\n        DayPipe,\n        HourMinutePipe,\n        IntPipe,\n        PercentPipe,\n        TruncatePipe] });\nPipesModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: PipesModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: PipesModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        CurrencyPipe,\n                        DatePipe,\n                        DatetimePipe,\n                        DayPipe,\n                        HourMinutePipe,\n                        IntPipe,\n                        PercentPipe,\n                        TruncatePipe\n                    ],\n                    imports: [],\n                    exports: [\n                        CurrencyPipe,\n                        DatePipe,\n                        DatetimePipe,\n                        DayPipe,\n                        HourMinutePipe,\n                        IntPipe,\n                        PercentPipe,\n                        TruncatePipe\n                    ]\n                }]\n        }] });\n\n/*\n * Public API Surface of pipes\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CurrencyPipe, DatePipe, DatetimePipe, DayPipe, HourMinutePipe, IntPipe, PercentPipe, PipesModule, TruncatePipe };\n//# sourceMappingURL=pipes.mjs.map\n","map":{"version":3,"file":"pipes.mjs","sources":["../../../projects/pipes/src/lib/currency.pipe.ts","../../../projects/pipes/src/lib/date.pipe.ts","../../../projects/pipes/src/lib/datetime.pipe.ts","../../../projects/pipes/src/lib/day.pipe.ts","../../../projects/pipes/src/lib/hour-minute.pipe.ts","../../../projects/pipes/src/lib/int.pipe.ts","../../../projects/pipes/src/lib/percent.pipe.ts","../../../projects/pipes/src/lib/truncate.pipe.ts","../../../projects/pipes/src/lib/pipes.module.ts","../../../projects/pipes/src/public-api.ts","../../../projects/pipes/src/pipes.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'currencyPipe',\n})\nexport class CurrencyPipe implements PipeTransform {\n  transform(value: any, args?: any): any {\n    return 'S/' + Number(value).toFixed(2);\n  }\n}\n","import { DatePipe as AngularDatePipe } from '@angular/common';\nimport { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'datePipe',\n})\nexport class DatePipe extends AngularDatePipe implements PipeTransform {\n  override transform(value: any, args?: any): any {\n    return super.transform(value, 'dd/MM/YYYY');\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DatePipe } from '@angular/common';\n\n@Pipe({\n  name: 'datetimePipe',\n})\nexport class DatetimePipe extends DatePipe implements PipeTransform {\n  override transform(value: any, args?: any): any {\n    return super.transform(value, 'dd/MM/YYYY h:mm:ss a');\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'dayPipe',\n})\nexport class DayPipe implements PipeTransform {\n  transform(value: any, args?: any): any {\n    return value + ' días';\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DatePipe } from '@angular/common';\n\n@Pipe({\n  name: 'hourMinutePipe',\n})\nexport class HourMinutePipe extends DatePipe implements PipeTransform {\n  override transform(value: any, args?: any): any {\n    return super.transform(value, 'h:mm a');\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'intPipe',\n})\nexport class IntPipe implements PipeTransform {\n  transform(value: any, args?: any): any {\n    return Number(value).toFixed(0);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'percentPipe',\n})\nexport class PercentPipe implements PipeTransform {\n  transform(value: any, args?: any): any {\n    return (value * 100).toFixed(0) + '%';\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'truncatePipe',\n})\nexport class TruncatePipe implements PipeTransform {\n  transform(value: string, limit: number): any {\n    if (limit <= value.length) {\n      return value.substring(0, limit) + \"...\";\n    } else {\n      return value;\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CurrencyPipe } from './currency.pipe';\nimport { DatePipe } from './date.pipe';\nimport { DatetimePipe } from './datetime.pipe';\nimport { DayPipe } from './day.pipe';\nimport { HourMinutePipe } from './hour-minute.pipe';\nimport { IntPipe } from './int.pipe';\nimport { PercentPipe } from './percent.pipe';\nimport { TruncatePipe } from './truncate.pipe';\n\n\n@NgModule({\n  declarations: [\n    CurrencyPipe,\n    DatePipe,\n    DatetimePipe,\n    DayPipe,\n    HourMinutePipe,\n    IntPipe,\n    PercentPipe,\n    TruncatePipe\n  ],\n  imports: [\n  ],\n  exports: [\n    CurrencyPipe,\n    DatePipe,\n    DatetimePipe,\n    DayPipe,\n    HourMinutePipe,\n    IntPipe,\n    PercentPipe,\n    TruncatePipe\n  ]\n})\nexport class PipesModule { }\n","/*\n * Public API Surface of pipes\n */\n\nexport * from './lib/pipes.module';\nexport * from './lib/currency.pipe';\nexport * from './lib/date.pipe';\nexport * from './lib/datetime.pipe';\nexport * from './lib/day.pipe';\nexport * from './lib/hour-minute.pipe';\nexport * from './lib/int.pipe';\nexport * from './lib/percent.pipe';\nexport * from './lib/truncate.pipe';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["AngularDatePipe","DatePipe"],"mappings":"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"}},"fesm2015":{"code":"import * as i0 from '@angular/core';\nimport { Pipe, NgModule } from '@angular/core';\nimport { DatePipe as DatePipe$1 } from '@angular/common';\n\nclass CurrencyPipe {\n    transform(value, args) {\n        return 'S/' + Number(value).toFixed(2);\n    }\n}\nCurrencyPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: CurrencyPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });\nCurrencyPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"14.0.0\", version: \"14.3.0\", ngImport: i0, type: CurrencyPipe, name: \"currencyPipe\" });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: CurrencyPipe, decorators: [{\n            type: Pipe,\n            args: [{\n                    name: 'currencyPipe',\n                }]\n        }] });\n\nclass DatePipe extends DatePipe$1 {\n    transform(value, args) {\n        return super.transform(value, 'dd/MM/YYYY');\n    }\n}\nDatePipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: DatePipe, deps: null, target: i0.ɵɵFactoryTarget.Pipe });\nDatePipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"14.0.0\", version: \"14.3.0\", ngImport: i0, type: DatePipe, name: \"datePipe\" });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: DatePipe, decorators: [{\n            type: Pipe,\n            args: [{\n                    name: 'datePipe',\n                }]\n        }] });\n\nclass DatetimePipe extends DatePipe$1 {\n    transform(value, args) {\n        return super.transform(value, 'dd/MM/YYYY h:mm:ss a');\n    }\n}\nDatetimePipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: DatetimePipe, deps: null, target: i0.ɵɵFactoryTarget.Pipe });\nDatetimePipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"14.0.0\", version: \"14.3.0\", ngImport: i0, type: DatetimePipe, name: \"datetimePipe\" });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: DatetimePipe, decorators: [{\n            type: Pipe,\n            args: [{\n                    name: 'datetimePipe',\n                }]\n        }] });\n\nclass DayPipe {\n    transform(value, args) {\n        return value + ' días';\n    }\n}\nDayPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: DayPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });\nDayPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"14.0.0\", version: \"14.3.0\", ngImport: i0, type: DayPipe, name: \"dayPipe\" });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: DayPipe, decorators: [{\n            type: Pipe,\n            args: [{\n                    name: 'dayPipe',\n                }]\n        }] });\n\nclass HourMinutePipe extends DatePipe$1 {\n    transform(value, args) {\n        return super.transform(value, 'h:mm a');\n    }\n}\nHourMinutePipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: HourMinutePipe, deps: null, target: i0.ɵɵFactoryTarget.Pipe });\nHourMinutePipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"14.0.0\", version: \"14.3.0\", ngImport: i0, type: HourMinutePipe, name: \"hourMinutePipe\" });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: HourMinutePipe, decorators: [{\n            type: Pipe,\n            args: [{\n                    name: 'hourMinutePipe',\n                }]\n        }] });\n\nclass IntPipe {\n    transform(value, args) {\n        return Number(value).toFixed(0);\n    }\n}\nIntPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: IntPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });\nIntPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"14.0.0\", version: \"14.3.0\", ngImport: i0, type: IntPipe, name: \"intPipe\" });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: IntPipe, decorators: [{\n            type: Pipe,\n            args: [{\n                    name: 'intPipe',\n                }]\n        }] });\n\nclass PercentPipe {\n    transform(value, args) {\n        return (value * 100).toFixed(0) + '%';\n    }\n}\nPercentPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: PercentPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });\nPercentPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"14.0.0\", version: \"14.3.0\", ngImport: i0, type: PercentPipe, name: \"percentPipe\" });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: PercentPipe, decorators: [{\n            type: Pipe,\n            args: [{\n                    name: 'percentPipe',\n                }]\n        }] });\n\nclass TruncatePipe {\n    transform(value, limit) {\n        if (limit <= value.length) {\n            return value.substring(0, limit) + \"...\";\n        }\n        else {\n            return value;\n        }\n    }\n}\nTruncatePipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: TruncatePipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });\nTruncatePipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"14.0.0\", version: \"14.3.0\", ngImport: i0, type: TruncatePipe, name: \"truncatePipe\" });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: TruncatePipe, decorators: [{\n            type: Pipe,\n            args: [{\n                    name: 'truncatePipe',\n                }]\n        }] });\n\nclass PipesModule {\n}\nPipesModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: PipesModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nPipesModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.3.0\", ngImport: i0, type: PipesModule, declarations: [CurrencyPipe,\n        DatePipe,\n        DatetimePipe,\n        DayPipe,\n        HourMinutePipe,\n        IntPipe,\n        PercentPipe,\n        TruncatePipe], exports: [CurrencyPipe,\n        DatePipe,\n        DatetimePipe,\n        DayPipe,\n        HourMinutePipe,\n        IntPipe,\n        PercentPipe,\n        TruncatePipe] });\nPipesModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: PipesModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: PipesModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        CurrencyPipe,\n                        DatePipe,\n                        DatetimePipe,\n                        DayPipe,\n                        HourMinutePipe,\n                        IntPipe,\n                        PercentPipe,\n                        TruncatePipe\n                    ],\n                    imports: [],\n                    exports: [\n                        CurrencyPipe,\n                        DatePipe,\n                        DatetimePipe,\n                        DayPipe,\n                        HourMinutePipe,\n                        IntPipe,\n                        PercentPipe,\n                        TruncatePipe\n                    ]\n                }]\n        }] });\n\n/*\n * Public API Surface of pipes\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CurrencyPipe, DatePipe, DatetimePipe, DayPipe, HourMinutePipe, IntPipe, PercentPipe, PipesModule, TruncatePipe };\n//# sourceMappingURL=pipes.mjs.map\n","map":{"version":3,"file":"pipes.mjs","sources":["../../../projects/pipes/src/lib/currency.pipe.ts","../../../projects/pipes/src/lib/date.pipe.ts","../../../projects/pipes/src/lib/datetime.pipe.ts","../../../projects/pipes/src/lib/day.pipe.ts","../../../projects/pipes/src/lib/hour-minute.pipe.ts","../../../projects/pipes/src/lib/int.pipe.ts","../../../projects/pipes/src/lib/percent.pipe.ts","../../../projects/pipes/src/lib/truncate.pipe.ts","../../../projects/pipes/src/lib/pipes.module.ts","../../../projects/pipes/src/public-api.ts","../../../projects/pipes/src/pipes.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'currencyPipe',\n})\nexport class CurrencyPipe implements PipeTransform {\n  transform(value: any, args?: any): any {\n    return 'S/' + Number(value).toFixed(2);\n  }\n}\n","import { DatePipe as AngularDatePipe } from '@angular/common';\nimport { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'datePipe',\n})\nexport class DatePipe extends AngularDatePipe implements PipeTransform {\n  override transform(value: any, args?: any): any {\n    return super.transform(value, 'dd/MM/YYYY');\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DatePipe } from '@angular/common';\n\n@Pipe({\n  name: 'datetimePipe',\n})\nexport class DatetimePipe extends DatePipe implements PipeTransform {\n  override transform(value: any, args?: any): any {\n    return super.transform(value, 'dd/MM/YYYY h:mm:ss a');\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'dayPipe',\n})\nexport class DayPipe implements PipeTransform {\n  transform(value: any, args?: any): any {\n    return value + ' días';\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DatePipe } from '@angular/common';\n\n@Pipe({\n  name: 'hourMinutePipe',\n})\nexport class HourMinutePipe extends DatePipe implements PipeTransform {\n  override transform(value: any, args?: any): any {\n    return super.transform(value, 'h:mm a');\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'intPipe',\n})\nexport class IntPipe implements PipeTransform {\n  transform(value: any, args?: any): any {\n    return Number(value).toFixed(0);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'percentPipe',\n})\nexport class PercentPipe implements PipeTransform {\n  transform(value: any, args?: any): any {\n    return (value * 100).toFixed(0) + '%';\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'truncatePipe',\n})\nexport class TruncatePipe implements PipeTransform {\n  transform(value: string, limit: number): any {\n    if (limit <= value.length) {\n      return value.substring(0, limit) + \"...\";\n    } else {\n      return value;\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CurrencyPipe } from './currency.pipe';\nimport { DatePipe } from './date.pipe';\nimport { DatetimePipe } from './datetime.pipe';\nimport { DayPipe } from './day.pipe';\nimport { HourMinutePipe } from './hour-minute.pipe';\nimport { IntPipe } from './int.pipe';\nimport { PercentPipe } from './percent.pipe';\nimport { TruncatePipe } from './truncate.pipe';\n\n\n@NgModule({\n  declarations: [\n    CurrencyPipe,\n    DatePipe,\n    DatetimePipe,\n    DayPipe,\n    HourMinutePipe,\n    IntPipe,\n    PercentPipe,\n    TruncatePipe\n  ],\n  imports: [\n  ],\n  exports: [\n    CurrencyPipe,\n    DatePipe,\n    DatetimePipe,\n    DayPipe,\n    HourMinutePipe,\n    IntPipe,\n    PercentPipe,\n    TruncatePipe\n  ]\n})\nexport class PipesModule { }\n","/*\n * Public API Surface of pipes\n */\n\nexport * from './lib/pipes.module';\nexport * from './lib/currency.pipe';\nexport * from './lib/date.pipe';\nexport * from './lib/datetime.pipe';\nexport * from './lib/day.pipe';\nexport * from './lib/hour-minute.pipe';\nexport * from './lib/int.pipe';\nexport * from './lib/percent.pipe';\nexport * from './lib/truncate.pipe';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["AngularDatePipe","DatePipe"],"mappings":"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"}}}