{"hash":"17d06063b413447a42605cddbf48a31000352626","fesm2020":{"code":"import * as i0 from '@angular/core';\nimport { NgModule } from '@angular/core';\nimport { generateAlias } from '@devs-studio/string';\n\nclass DevsValidatorsModule {\n}\nDevsValidatorsModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: DevsValidatorsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nDevsValidatorsModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.3.0\", ngImport: i0, type: DevsValidatorsModule });\nDevsValidatorsModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: DevsValidatorsModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: DevsValidatorsModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [],\n                    imports: [],\n                    exports: []\n                }]\n        }] });\n\nfunction _checkDuplicates(inputs, fields, alias) {\n    var items = inputs.reduce((acc, cur) => {\n        var parts = [];\n        for (let field of fields) {\n            if (alias) {\n                parts.push(generateAlias(cur[field]));\n            }\n            else {\n                parts.push(cur[field]);\n            }\n        }\n        acc.push(parts.join('|'));\n        return acc;\n    }, []);\n    var uniques = items.filter((value, index, self) => {\n        return self.indexOf(value) === index;\n    });\n    return items.length === uniques.length;\n}\nfunction checkArrayUnique(fields, alias) {\n    return (control) => {\n        const items = control.value;\n        if (!_checkDuplicates(items, fields, alias)) {\n            return { unique: { value: control.value } };\n        }\n        return null;\n    };\n}\n\nfunction _baseFunction(right, rule, callback) {\n    return (control) => {\n        const leftValue = Number(control.value);\n        const formGroup = control.parent;\n        if (formGroup) {\n            const rightValue = Number(formGroup.get(right)?.value);\n            if (!Number.isNaN(leftValue) && !Number.isNaN(rightValue) && !callback(leftValue, rightValue)) {\n                return { [rule]: true };\n            }\n        }\n        return null;\n    };\n}\nfunction isGreaterThanOrEqual(right) {\n    return _baseFunction(right, 'greaterThanOrEqual', (left, right) => {\n        return left >= right;\n    });\n}\nfunction isLessThanOrEqual(right) {\n    return _baseFunction(right, 'lessThanOrEqual', (left, right) => {\n        return left <= right;\n    });\n}\n\nclass DevsValidators {\n    static checkArrayUnique(fields, alias) {\n        return checkArrayUnique(fields, alias);\n    }\n    static isGreaterThanOrEqual(right) {\n        return isGreaterThanOrEqual(right);\n    }\n    static isLessThanOrEqual(right) {\n        return isLessThanOrEqual(right);\n    }\n}\n\n/*\n * Public API Surface of validators\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { DevsValidators, DevsValidatorsModule };\n//# sourceMappingURL=devs-studio-angular-validators.mjs.map\n","map":{"version":3,"file":"devs-studio-angular-validators.mjs","sources":["../../../projects/validators/src/lib/devs-validators.module.ts","../../../projects/validators/src/lib/array-unique.validator.ts","../../../projects/validators/src/lib/arithmetic.validator.ts","../../../projects/validators/src/lib/devs-validators.ts","../../../projects/validators/src/public-api.ts","../../../projects/validators/src/devs-studio-angular-validators.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\n\n@NgModule({\n  declarations: [\n  ],\n  imports: [\n  ],\n  exports: [\n  ]\n})\nexport class DevsValidatorsModule { }\n","import { AbstractControl, ValidationErrors, ValidatorFn } from \"@angular/forms\";\nimport { generateAlias } from \"@devs-studio/string\";\n\ninterface ArrayUniqueItem {\n    [key: string]: any,\n}\n\nfunction _checkDuplicates(inputs: ArrayUniqueItem[], fields: string[], alias: boolean) {\n    var items = inputs.reduce<string[]>((acc, cur) => {\n        var parts = [];\n        for (let field of fields) {\n            if (alias) {\n                parts.push(generateAlias(cur[field]));\n            } else {\n                parts.push(cur[field]);\n            }\n        }\n        acc.push(parts.join('|'));\n        return acc;\n    }, []);\n\n    var uniques = items.filter((value, index, self) => {\n        return self.indexOf(value) === index;\n    });\n\n    return items.length === uniques.length;\n}\n\nexport function checkArrayUnique(fields: string[], alias: boolean): ValidatorFn {\n    return (control: AbstractControl): ValidationErrors | null => {\n\n        const items = control.value as ArrayUniqueItem[];\n\n        if (!_checkDuplicates(items, fields, alias)) {\n            return { unique: { value: control.value } };\n        }\n\n        return null;\n    };\n}","import { AbstractControl, FormGroup, ValidationErrors, ValidatorFn } from \"@angular/forms\";\n\nfunction _baseFunction(right: string, rule: string, callback: (left: Number, right: Number) => {}): ValidatorFn {\n    return (control: AbstractControl): ValidationErrors | null => {\n\n        const leftValue = Number(control.value);\n        const formGroup = control.parent as FormGroup\n\n        if (formGroup) {\n            const rightValue = Number(formGroup.get(right)?.value);\n\n            if (!Number.isNaN(leftValue) && !Number.isNaN(rightValue) && !callback(leftValue, rightValue)) {\n                return { [rule]: true };\n            }\n        }\n\n        return null;\n    };\n}\n\n\nexport function isGreaterThanOrEqual(right: string): ValidatorFn {\n    return _baseFunction(right, 'greaterThanOrEqual', (left: Number, right: Number) => {\n        return left >= right;\n    })\n}\n\nexport function isLessThanOrEqual(right: string): ValidatorFn {\n    return _baseFunction(right, 'lessThanOrEqual', (left: Number, right: Number) => {\n        return left <= right;\n    })\n}","import { ValidatorFn } from \"@angular/forms\";\nimport { checkArrayUnique } from \"./array-unique.validator\";\nimport { isGreaterThanOrEqual, isLessThanOrEqual } from \"./arithmetic.validator\";\n\nexport class DevsValidators {\n    static checkArrayUnique(fields: string[], alias: boolean): ValidatorFn {\n        return checkArrayUnique(fields, alias);\n    }\n\n    static isGreaterThanOrEqual(right: string): ValidatorFn {\n        return isGreaterThanOrEqual(right);\n    }\n\n    static isLessThanOrEqual(right: string): ValidatorFn {\n        return isLessThanOrEqual(right);\n    }\n}","/*\n * Public API Surface of validators\n */\n\nexport * from './lib/devs-validators.module';\nexport * from './lib/devs-validators';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}},"fesm2015":{"code":"import * as i0 from '@angular/core';\nimport { NgModule } from '@angular/core';\nimport { generateAlias } from '@devs-studio/string';\n\nclass DevsValidatorsModule {\n}\nDevsValidatorsModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: DevsValidatorsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nDevsValidatorsModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.3.0\", ngImport: i0, type: DevsValidatorsModule });\nDevsValidatorsModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: DevsValidatorsModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: DevsValidatorsModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [],\n                    imports: [],\n                    exports: []\n                }]\n        }] });\n\nfunction _checkDuplicates(inputs, fields, alias) {\n    var items = inputs.reduce((acc, cur) => {\n        var parts = [];\n        for (let field of fields) {\n            if (alias) {\n                parts.push(generateAlias(cur[field]));\n            }\n            else {\n                parts.push(cur[field]);\n            }\n        }\n        acc.push(parts.join('|'));\n        return acc;\n    }, []);\n    var uniques = items.filter((value, index, self) => {\n        return self.indexOf(value) === index;\n    });\n    return items.length === uniques.length;\n}\nfunction checkArrayUnique(fields, alias) {\n    return (control) => {\n        const items = control.value;\n        if (!_checkDuplicates(items, fields, alias)) {\n            return { unique: { value: control.value } };\n        }\n        return null;\n    };\n}\n\nfunction _baseFunction(right, rule, callback) {\n    return (control) => {\n        var _a;\n        const leftValue = Number(control.value);\n        const formGroup = control.parent;\n        if (formGroup) {\n            const rightValue = Number((_a = formGroup.get(right)) === null || _a === void 0 ? void 0 : _a.value);\n            if (!Number.isNaN(leftValue) && !Number.isNaN(rightValue) && !callback(leftValue, rightValue)) {\n                return { [rule]: true };\n            }\n        }\n        return null;\n    };\n}\nfunction isGreaterThanOrEqual(right) {\n    return _baseFunction(right, 'greaterThanOrEqual', (left, right) => {\n        return left >= right;\n    });\n}\nfunction isLessThanOrEqual(right) {\n    return _baseFunction(right, 'lessThanOrEqual', (left, right) => {\n        return left <= right;\n    });\n}\n\nclass DevsValidators {\n    static checkArrayUnique(fields, alias) {\n        return checkArrayUnique(fields, alias);\n    }\n    static isGreaterThanOrEqual(right) {\n        return isGreaterThanOrEqual(right);\n    }\n    static isLessThanOrEqual(right) {\n        return isLessThanOrEqual(right);\n    }\n}\n\n/*\n * Public API Surface of validators\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { DevsValidators, DevsValidatorsModule };\n//# sourceMappingURL=devs-studio-angular-validators.mjs.map\n","map":{"version":3,"file":"devs-studio-angular-validators.mjs","sources":["../../../projects/validators/src/lib/devs-validators.module.ts","../../../projects/validators/src/lib/array-unique.validator.ts","../../../projects/validators/src/lib/arithmetic.validator.ts","../../../projects/validators/src/lib/devs-validators.ts","../../../projects/validators/src/public-api.ts","../../../projects/validators/src/devs-studio-angular-validators.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\n\n@NgModule({\n  declarations: [\n  ],\n  imports: [\n  ],\n  exports: [\n  ]\n})\nexport class DevsValidatorsModule { }\n","import { AbstractControl, ValidationErrors, ValidatorFn } from \"@angular/forms\";\nimport { generateAlias } from \"@devs-studio/string\";\n\ninterface ArrayUniqueItem {\n    [key: string]: any,\n}\n\nfunction _checkDuplicates(inputs: ArrayUniqueItem[], fields: string[], alias: boolean) {\n    var items = inputs.reduce<string[]>((acc, cur) => {\n        var parts = [];\n        for (let field of fields) {\n            if (alias) {\n                parts.push(generateAlias(cur[field]));\n            } else {\n                parts.push(cur[field]);\n            }\n        }\n        acc.push(parts.join('|'));\n        return acc;\n    }, []);\n\n    var uniques = items.filter((value, index, self) => {\n        return self.indexOf(value) === index;\n    });\n\n    return items.length === uniques.length;\n}\n\nexport function checkArrayUnique(fields: string[], alias: boolean): ValidatorFn {\n    return (control: AbstractControl): ValidationErrors | null => {\n\n        const items = control.value as ArrayUniqueItem[];\n\n        if (!_checkDuplicates(items, fields, alias)) {\n            return { unique: { value: control.value } };\n        }\n\n        return null;\n    };\n}","import { AbstractControl, FormGroup, ValidationErrors, ValidatorFn } from \"@angular/forms\";\n\nfunction _baseFunction(right: string, rule: string, callback: (left: Number, right: Number) => {}): ValidatorFn {\n    return (control: AbstractControl): ValidationErrors | null => {\n\n        const leftValue = Number(control.value);\n        const formGroup = control.parent as FormGroup\n\n        if (formGroup) {\n            const rightValue = Number(formGroup.get(right)?.value);\n\n            if (!Number.isNaN(leftValue) && !Number.isNaN(rightValue) && !callback(leftValue, rightValue)) {\n                return { [rule]: true };\n            }\n        }\n\n        return null;\n    };\n}\n\n\nexport function isGreaterThanOrEqual(right: string): ValidatorFn {\n    return _baseFunction(right, 'greaterThanOrEqual', (left: Number, right: Number) => {\n        return left >= right;\n    })\n}\n\nexport function isLessThanOrEqual(right: string): ValidatorFn {\n    return _baseFunction(right, 'lessThanOrEqual', (left: Number, right: Number) => {\n        return left <= right;\n    })\n}","import { ValidatorFn } from \"@angular/forms\";\nimport { checkArrayUnique } from \"./array-unique.validator\";\nimport { isGreaterThanOrEqual, isLessThanOrEqual } from \"./arithmetic.validator\";\n\nexport class DevsValidators {\n    static checkArrayUnique(fields: string[], alias: boolean): ValidatorFn {\n        return checkArrayUnique(fields, alias);\n    }\n\n    static isGreaterThanOrEqual(right: string): ValidatorFn {\n        return isGreaterThanOrEqual(right);\n    }\n\n    static isLessThanOrEqual(right: string): ValidatorFn {\n        return isLessThanOrEqual(right);\n    }\n}","/*\n * Public API Surface of validators\n */\n\nexport * from './lib/devs-validators.module';\nexport * from './lib/devs-validators';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}}}